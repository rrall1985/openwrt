#
# This is free software, lisence use MIT.
#
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
#
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI rrall测试5.4内核
on:
   push:
    branches:
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
      - name: Custom profile 1
        run: |
          sed -i "s/base-files libc libgcc busybox dropbear mtd uci opkg netifd fstools uclient-fetch logd urandom-seed urngd/base-files libc libgcc busybox dropbear mtd uci opkg netifd fstools uclient-fetch logd block-mount coremark lm-sensors kmod-nf-nathelper kmod-nf-nathelper-extra kmod-ipt-raw wget libustream-openssl ca-certificates default-settings luci luci-app-ddns luci-app-sqm luci-app-upnp luci-app-adbyby-plus luci-app-autoreboot luci-app-filetransfer luci-app-vsftpd ddns-scripts_aliyun luci-app-SSR-plus luci-app-pptp-server luci-app-arpbind luci-app-vlmcsd luci-app-wifischedule luci-app-wol luci-app-ramfree luci-app-sfe luci-app-flowoffload luci-app-nlbwmon luci-app-usb-printer luci-app-accesscontrol  luci-app-xlnetacc/g"  include/target.mk
      - name: Custom profile 2
        run: |    
          sed -i 's/dnsmasq iptables ip6tables ppp ppp-mod-pppoe firewall odhcpd-ipv6only odhcp6c kmod-ipt-offload/dnsmasq-full iptables ppp ppp-mod-pppoe firewall kmod-ipt-offload kmod-tcp-bbr/g' include/target.mk
      - name: Custom profile 3
        run: |
  
          sed -i '09s/\(.\{1\}\)/\#/' package/network/services/uhttpd/files/uhttpd.config
      - name: Custom profile 4
        run: |
          sed -i '10s/\(.\{1\}\)/\#/' package/network/services/uhttpd/files/uhttpd.config
      - name: Custom profile 5
        run: |
          sed -i 's/option redirect_https\s1/option redirect_https   0/g' package/network/services/uhttpd/files/uhttpd.config
      - name: Custom profile 6
        run: |   
          sed -i '46s/\(.\{1\}\)/\#/' package/network/services/uhttpd/files/uhttpd.init
      - name: Custom profile 7
        run: |    
          sed -i '47s/\(.\{1\}\)/\#/' package/network/services/uhttpd/files/uhttpd.init
      - name: Custom profile 8
        run: |   
          sed -i '53s/\(.\{1\}\)/\#/' package/network/services/uhttpd/files/uhttpd.init
      - name: Custom profile 9
        run: |
          sed -i 's/16384/65536/g' package/kernel/linux/files/sysctl-nf-conntrack.conf
      - name: Custom profile 10
        run: |
          sed -i 's/default "5"/default "0"/g' config/Config-images.in
      - name: 加载lean插件包
        run: |   
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean  package/lean  
           
           cd  package/lean
           rm -rfv  dnsforwarder
           rm -rfv  default-settings
           rm -rfv  autocore
     
      - name: 拉取github插件包
        run: |   
           git clone  https://github.com/frainzy1477/luci-app-clash package/lean/luci-app-clash
           git clone  https://github.com/vernesong/OpenClash package/lean/OpenClash 
           git clone  https://github.com/Leo-Jo-My/luci-theme-leo package/luci-theme-leo 
           git clone  https://github.com/Leo-Jo/luci-app-koolproxyR package/luci-app-koolproxyR
          #          =========================================
          #         |                                         |
          #         |         此处可以任意添加源码              |
          #         |                                         |
          #         |                                         |
          #          =========================================
          #
          

      - name: Custom profile 11
        run: | 
           sed -i 's/local e=require("luci.model.ipkg")/-- local e=require("luci.model.ipkg")--/g' package/lean/luci-app-frpc/luasrc/model/cbi/frp/frp.lua     
           
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分=======================
          #
          #
          # 如果不对本区块做出任何编辑, 则生成默认配置固件.
          #
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          #
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          #
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          #
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          #
          # 编译x64固件:
           cat >> .config <<EOF
           CONFIG_TARGET_x86=y
           CONFIG_TARGET_x86_64=y
           CONFIG_TARGET_x86_64_Generic=y
           EOF
          # 固件压缩:
          #  cat >> .config <<EOF
          #  CONFIG_TARGET_IMAGES_GZIP=y
          #  EOF
          # 编译UEFI固件:
          #  cat >> .config <<EOF
          #  CONFIG_EFI_IMAGES=y
          #  EOF
          # IPv6支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          # CONFIG_PACKAGE_ipv6helper=y
          # EOF
          # 多文件系统支持:
          # cat >> .config <<EOF
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # EOF
          # USB3.0支持:
           cat >> .config <<EOF
           CONFIG_PACKAGE_kmod-usb-ohci=y
           CONFIG_PACKAGE_kmod-usb-ohci-pci=y
           CONFIG_PACKAGE_kmod-usb2=y
           CONFIG_PACKAGE_kmod-usb2-pci=y
           CONFIG_PACKAGE_kmod-usb3=y
          EOF
          # 常用LuCI插件选择:
           cat >> .config <<EOF
          #  CONFIG_PACKAGE_luci-app-adbyby-plus=y
          #  CONFIG_PACKAGE_luci-app-aria2=y
          #  CONFIG_PACKAGE_luci-app-baidupcs-web=y
          #  CONFIG_PACKAGE_luci-app-docker=y
          #  CONFIG_PACKAGE_luci-lib-docker=y
          #  CONFIG_PACKAGE_luci-app-dockerman=y
          #  CONFIG_PACKAGE_luci-app-diskman=y
          #  CONFIG_PACKAGE_luci-app-rclone=y
          #  CONFIG_PACKAGE_luci-app-frpc=y
          #  CONFIG_PACKAGE_luci-app-kodexplorer=y
          #  CONFIG_PACKAGE_luci-app-minidlna=y
          #  CONFIG_PACKAGE_luci-app-openvpn=y
          #  CONFIG_PACKAGE_luci-app-openvpn-server=y
          #  CONFIG_PACKAGE_luci-app-qbittorrent=y
          #  CONFIG_PACKAGE_luci-app-familycloud=y
          #  CONFIG_PACKAGE_luci-app-syncthing=y
             CONFIG_PACKAGE_luci-app-syncdial=y
             CONFIG_PACKAGE_luci-app-ttyd=y
          #  CONFIG_PACKAGE_luci-app-mwan3=y
          #  CONFIG_PACKAGE_luci-app-mwan3helper=y
             CONFIG_PACKAGE_luci-app-openclash=y
          #  CONFIG_PACKAGE_luci-app-v2ray-server=y
          #  CONFIG_PACKAGE_luci-app-verysync=y
          #  CONFIG_PACKAGE_luci-app-webadmin=y
          #  CONFIG_PACKAGE_luci-app-udpxy=y
          #  CONFIG_PACKAGE_luci-app-usb-printer=y
          #  CONFIG_PACKAGE_luci-app-nps=y
          #  CONFIG_PACKAGE_luci-app-netdata=y
          #  CONFIG_PACKAGE_luci-app-unblockmusic=y
          #  CONFIG_PACKAGE_luci-app-unblockneteasemusic-go=y
          #  CONFIG_PACKAGE_luci-app-unblockneteasemusic-mini=y
          #  CONFIG_PACKAGE_luci-app-qos=y
             CONFIG_PACKAGE_luci-app-clash=y
          #  CONFIG_PACKAGE_luci-app-samba=y
             CONFIG_PACKAGE_luci-app-koolproxyR=y
          #  CONFIG_PACKAGE_luci-app-advanced-reboot=y
          #  CONFIG_PACKAGE_luci-app-amule=y
          #  CONFIG_PACKAGE_luci-app-adblock=y
          #  CONFIG_PACKAGE_luci-app-cifs=y
          #  CONFIG_PACKAGE_luci-app-cifsd=y
          #  CONFIG_PACKAGE_luci-app-banip=y
          #  CONFIG_PACKAGE_luci-app-dnspod=y
          #  CONFIG_PACKAGE_luci-app-haproxy-tcp=y
          #  CONFIG_PACKAGE_luci-app-mentohust=y
          #  CONFIG_PACKAGE_luci-app-mjpg-streamer=y
          #  CONFIG_PACKAGE_luci-app-n2n_v2=y
          #  CONFIG_PACKAGE_luci-app-nfs=y
          # CONFIG_PACKAGE_luci-app-samba4=y
          # CONFIG_PACKAGE_luci-app-softethervpn=y
          # CONFIG_PACKAGE_luci-app-ssrserver-python=y
          # CONFIG_PACKAGE_luci-app-transmission=y
            CONFIG_LUCI_LANG_luci=y
            CONFIG_LUCI_LANG_en=y
            CONFIG_LUCI_LANG_zh_Hans=y
           EOF
          # LuCI主题:
           cat >> .config <<EOF
          #  CONFIG_PACKAGE_luci-theme-Butterfly=y
          #  CONFIG_PACKAGE_luci-theme-opentomcat=y
          #  CONFIG_PACKAGE_luci-theme-opentomato=y
             CONFIG_PACKAGE_luci-theme-bootstrap=y
             CONFIG_PACKAGE_luci-theme-material=y
             CONFIG_PACKAGE_luci-theme-rosy=y
             CONFIG_PACKAGE_luci-theme-leo=y 
           EOF
          # 常用软件包:
           cat >> .config <<EOF
           CONFIG_PACKAGE_curl=y
           CONFIG_PACKAGE_htop=y
           CONFIG_PACKAGE_nano=y
           CONFIG_PACKAGE_screen=y
           CONFIG_PACKAGE_tree=y
           CONFIG_PACKAGE_vim-fuller=y
           CONFIG_PACKAGE_wget=y
           EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
           cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF
          #
          # ========================固件定制部分结束========================
          #
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload firmware
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/

      - name: Upload  IPK
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt x86 IPK
          path: ./bin/packages/
